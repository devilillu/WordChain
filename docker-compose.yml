services:
  wordchainrouter:
    build:
      context: ./WordChainRouter
      target: production
    ports:
      - 8088:8088
    expose:
      - "8088"
    depends_on:
      - kafka
      - mongo
    environment:
      KAFKA_REQUESTS_TOPIC: "topic-wordchain-request"
      KAFKA_ENDPOINT : "kafka:9093"
      PORT: "8088"
      DB_CONN_STRING : "mongodb://root:example@mongo:27017"
      DB_NAME : "wordchain"
      WORDCHAIN_COLLECTION_NAME : "dev"

  wordchainworker:
    build:
      context: ./WordChain
      target: production
    depends_on:
      - kafka  
      - wordchainrouter
    environment:
      KAFKA_REQUESTS_TOPIC: "topic-wordchain-request"
      KAFKA_RESULTS_TOPIC: "topic-wordchain-result"
      KAFKA_ENDPOINT : "kafka:9093"
      
  resultswriter:
    build:
      context: ./WordChainDB
      target: production
    depends_on:
      - kafka  
      - mongo
    environment:
      KAFKA_RESULTS_TOPIC: "topic-wordchain-result"
      KAFKA_ENDPOINT : "kafka:9093"
      DB_CONN_STRING : "mongodb://root:example@mongo:27017"
      DB_NAME : "wordchain"
      WORDCHAIN_COLLECTION_NAME : "dev"
  
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
  
  kafka:
    image: apache/kafka-native
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  kafka-ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka      
   